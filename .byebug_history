continue
auth.info.name
auth.name
auth
continue
where(provider: auth.provider, uid: auth.uid, email: auth.info.email)
where(provider: auth.provider, uid: auth.uid, email: auth.info.email
 where(provider: auth.provider, uid: auth.uid, email: auth.info.email
  where(provider: auth.provider, uid: auth.uid, email: auth.info.email
continue
 user.email = auth.info.email
continue
auth.info.email
auth.provider
auth.name
auth
continue
current_user.email
current_user
continue
auth.info.email
auth.info.first_name
auth.info
auth.first_name
auth
auth.email
auth
continue
auth.email
auth
auth.last_name
auth.email
auth.name
auth
user.email = auth.info.email
auth.provider
continue
auth.provider
continue
auth.provider
auth
autg
continue
current_user.name
current_user
current_user.first_name
current_user.name
current_user
continue
user.provider = auth.provider
where(provider: auth.provider, uid: auth.uid).first_or_create
continue
current_user
continue
provider
continue
current_user
continue
current_user
continue
current_user
continue
 auth.info.email
user
continue
current_user
continue
current_user
continue
env["omniauth.auth"]
omniauth.auth
env
auth
omniauth.auth
continue
user.oauth_expires_at = Time.at(auth.credentials.expires_at)
user.oauth_token = auth.credentials.token
user.uid = auth.uid
 user.provider = auth.provider
user
continue
 user = User.from_omniauth(env["omniauth.auth"])
continue
where(auth.slice(:provider, :uid)).first_or_initialize
where(auth.slice(:provider, :uid))
auth
continue
env["omniauth.auth"]
 user = User.from_omniauth(env["omniauth.auth"])
user
session[:user_id] = raw_info[:id]
session[:user_id] = user.id
env["omniauth.auth"]
params
continue
 @current_user ||= User.find(session[:user_id]) if session[:user_id]
continue
 @current_user ||= User.find(session[:user_id]) if session[:user_id]
